#include "/Engine/Private/Common.ush"

float3 Point0;
float3 Point1;
float3 Point2;
float AspectRatio;
Texture2D ColorRampTexture;
SamplerState ColorRampTextureSampler;

float Metaball(float2 Position, float2 Center, float Radius)
{
	float2 UVStrech = float2(AspectRatio, 1);
	
	return Radius / length((Position - Center) * UVStrech);
}

void MainPS(FScreenVertexOutput Input, out float4 OutColor : SV_Target0)
{
	float intensity0 = Metaball(Input.UV, Point0.xy, Point0.z);
	float intensity1 = Metaball(Input.UV, Point1.xy, Point1.z);
	float intensity2 = Metaball(Input.UV, Point2.xy, Point2.z);
	
	float intensity = intensity0 + intensity1 + intensity2;
	float normalizedIntensity = saturate(intensity);
	
	float2 colorRampUV = float2(normalizedIntensity, 0);
	float4 rampedColor = ColorRampTexture.Sample(ColorRampTextureSampler, colorRampUV);
	OutColor = rampedColor;
}